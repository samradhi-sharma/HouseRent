{"ast":null,"code":"var _jsxFileName = \"D:\\\\HouseRent\\\\client\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [user, setUser] = useState(null);\n\n  // Set up axios interceptors for token handling\n  useEffect(() => {\n    // Add a request interceptor to include the token in all outgoing requests\n    const requestInterceptor = axios.interceptors.request.use(config => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        config.headers['Authorization'] = `Bearer ${token}`;\n      }\n      return config;\n    }, error => {\n      return Promise.reject(error);\n    });\n\n    // Add a response interceptor to handle token-related errors\n    const responseInterceptor = axios.interceptors.response.use(response => response, error => {\n      // If we get a 401 Unauthorized error, log the user out\n      if (error.response && error.response.status === 401) {\n        console.log('Authentication error detected, logging out...');\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        setIsAuthenticated(false);\n        setUser(null);\n      }\n      return Promise.reject(error);\n    });\n\n    // Clean up interceptors when component unmounts\n    return () => {\n      axios.interceptors.request.eject(requestInterceptor);\n      axios.interceptors.response.eject(responseInterceptor);\n    };\n  }, []);\n  useEffect(() => {\n    // Check if user is logged in on mount\n    const token = localStorage.getItem('token');\n    const userData = localStorage.getItem('user');\n    console.log('Auth context initializing. Token exists:', !!token);\n    if (token) {\n      try {\n        setIsAuthenticated(true);\n\n        // Set user data if available\n        if (userData) {\n          try {\n            const parsedUser = JSON.parse(userData);\n            console.log('User data from localStorage:', parsedUser);\n\n            // Validate user data has required fields\n            if (!parsedUser || !parsedUser.id || !parsedUser.role) {\n              console.error('Invalid user data in localStorage:', parsedUser);\n              localStorage.removeItem('user');\n              localStorage.removeItem('token');\n              setIsAuthenticated(false);\n              setUser(null);\n            } else {\n              setUser(parsedUser);\n            }\n          } catch (error) {\n            console.error('Error parsing user data, clearing auth state:', error);\n            localStorage.removeItem('user');\n            localStorage.removeItem('token');\n            setIsAuthenticated(false);\n            setUser(null);\n          }\n        } else {\n          console.log('No user data in localStorage, but token exists');\n          // If we have a token but no user data, try to fetch the user\n          axios.get('/api/auth/me', {\n            headers: {\n              'Authorization': `Bearer ${token}`\n            }\n          }).then(res => {\n            if (res.data && res.data.data) {\n              console.log('User data fetched from API:', res.data.data);\n              const userData = {\n                id: res.data.data._id,\n                name: res.data.data.name,\n                email: res.data.data.email,\n                role: res.data.data.role\n              };\n              localStorage.setItem('user', JSON.stringify(userData));\n              setUser(userData);\n            }\n          }).catch(err => {\n            console.error('Failed to fetch user data, clearing auth state:', err);\n            localStorage.removeItem('token');\n            setIsAuthenticated(false);\n          });\n        }\n      } catch (err) {\n        console.error('Error in auth initialization:', err);\n        localStorage.removeItem('user');\n        localStorage.removeItem('token');\n        setIsAuthenticated(false);\n        setUser(null);\n      }\n    } else {\n      console.log('No authentication token found');\n      localStorage.removeItem('user'); // Clean up any orphaned user data\n      setIsAuthenticated(false);\n      setUser(null);\n    }\n    setLoading(false);\n  }, []);\n  const login = (token, userData) => {\n    console.log('Login called with token:', !!token);\n    console.log('Login called with userData:', userData);\n    if (!token) {\n      console.error('No token provided to login function');\n      return;\n    }\n    localStorage.setItem('token', token);\n\n    // Save user data\n    if (userData) {\n      try {\n        const userDataString = JSON.stringify(userData);\n        localStorage.setItem('user', userDataString);\n        console.log('User data saved to localStorage:', userDataString);\n        setUser(userData);\n      } catch (err) {\n        console.error('Error storing user data:', err);\n      }\n    } else {\n      console.warn('No user data provided during login');\n    }\n\n    // Set authentication state\n    setIsAuthenticated(true);\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setIsAuthenticated(false);\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      loading,\n      user,\n      login,\n      logout,\n      role: (user === null || user === void 0 ? void 0 : user.role) || null,\n      isRenter: (user === null || user === void 0 ? void 0 : user.role) === 'renter',\n      isOwner: (user === null || user === void 0 ? void 0 : user.role) === 'owner',\n      isAdmin: (user === null || user === void 0 ? void 0 : user.role) === 'admin'\n    },\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"Tz+VBF8392rb/ViTHClS2jGUQdY=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","loading","setLoading","user","setUser","requestInterceptor","interceptors","request","use","config","token","localStorage","getItem","headers","error","Promise","reject","responseInterceptor","response","status","console","log","removeItem","eject","userData","parsedUser","JSON","parse","id","role","get","then","res","data","_id","name","email","setItem","stringify","catch","err","login","userDataString","warn","logout","Provider","value","isRenter","isOwner","isAdmin","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["D:/HouseRent/client/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [user, setUser] = useState(null);\r\n\r\n  // Set up axios interceptors for token handling\r\n  useEffect(() => {\r\n    // Add a request interceptor to include the token in all outgoing requests\r\n    const requestInterceptor = axios.interceptors.request.use(\r\n      config => {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n          config.headers['Authorization'] = `Bearer ${token}`;\r\n        }\r\n        return config;\r\n      },\r\n      error => {\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n    \r\n    // Add a response interceptor to handle token-related errors\r\n    const responseInterceptor = axios.interceptors.response.use(\r\n      response => response,\r\n      error => {\r\n        // If we get a 401 Unauthorized error, log the user out\r\n        if (error.response && error.response.status === 401) {\r\n          console.log('Authentication error detected, logging out...');\r\n          localStorage.removeItem('token');\r\n          localStorage.removeItem('user');\r\n          setIsAuthenticated(false);\r\n          setUser(null);\r\n        }\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n    \r\n    // Clean up interceptors when component unmounts\r\n    return () => {\r\n      axios.interceptors.request.eject(requestInterceptor);\r\n      axios.interceptors.response.eject(responseInterceptor);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Check if user is logged in on mount\r\n    const token = localStorage.getItem('token');\r\n    const userData = localStorage.getItem('user');\r\n    \r\n    console.log('Auth context initializing. Token exists:', !!token);\r\n    \r\n    if (token) {\r\n      try {\r\n        setIsAuthenticated(true);\r\n        \r\n        // Set user data if available\r\n        if (userData) {\r\n          try {\r\n            const parsedUser = JSON.parse(userData);\r\n            console.log('User data from localStorage:', parsedUser);\r\n            \r\n            // Validate user data has required fields\r\n            if (!parsedUser || !parsedUser.id || !parsedUser.role) {\r\n              console.error('Invalid user data in localStorage:', parsedUser);\r\n              localStorage.removeItem('user');\r\n              localStorage.removeItem('token');\r\n              setIsAuthenticated(false);\r\n              setUser(null);\r\n            } else {\r\n              setUser(parsedUser);\r\n            }\r\n          } catch (error) {\r\n            console.error('Error parsing user data, clearing auth state:', error);\r\n            localStorage.removeItem('user');\r\n            localStorage.removeItem('token');\r\n            setIsAuthenticated(false);\r\n            setUser(null);\r\n          }\r\n        } else {\r\n          console.log('No user data in localStorage, but token exists');\r\n          // If we have a token but no user data, try to fetch the user\r\n          axios.get('/api/auth/me', {\r\n            headers: {\r\n              'Authorization': `Bearer ${token}`\r\n            }\r\n          })\r\n            .then(res => {\r\n              if (res.data && res.data.data) {\r\n                console.log('User data fetched from API:', res.data.data);\r\n                const userData = {\r\n                  id: res.data.data._id,\r\n                  name: res.data.data.name,\r\n                  email: res.data.data.email,\r\n                  role: res.data.data.role\r\n                };\r\n                localStorage.setItem('user', JSON.stringify(userData));\r\n                setUser(userData);\r\n              }\r\n            })\r\n            .catch(err => {\r\n              console.error('Failed to fetch user data, clearing auth state:', err);\r\n              localStorage.removeItem('token');\r\n              setIsAuthenticated(false);\r\n            });\r\n        }\r\n      } catch (err) {\r\n        console.error('Error in auth initialization:', err);\r\n        localStorage.removeItem('user');\r\n        localStorage.removeItem('token');\r\n        setIsAuthenticated(false);\r\n        setUser(null);\r\n      }\r\n    } else {\r\n      console.log('No authentication token found');\r\n      localStorage.removeItem('user'); // Clean up any orphaned user data\r\n      setIsAuthenticated(false);\r\n      setUser(null);\r\n    }\r\n    \r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = (token, userData) => {\r\n    console.log('Login called with token:', !!token);\r\n    console.log('Login called with userData:', userData);\r\n    \r\n    if (!token) {\r\n      console.error('No token provided to login function');\r\n      return;\r\n    }\r\n    \r\n    localStorage.setItem('token', token);\r\n    \r\n    // Save user data\r\n    if (userData) {\r\n      try {\r\n        const userDataString = JSON.stringify(userData);\r\n        localStorage.setItem('user', userDataString);\r\n        console.log('User data saved to localStorage:', userDataString);\r\n        setUser(userData);\r\n      } catch (err) {\r\n        console.error('Error storing user data:', err);\r\n      }\r\n    } else {\r\n      console.warn('No user data provided during login');\r\n    }\r\n    \r\n    // Set authentication state\r\n    setIsAuthenticated(true);\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    setIsAuthenticated(false);\r\n    setUser(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        isAuthenticated,\r\n        loading,\r\n        user,\r\n        login,\r\n        logout,\r\n        role: user?.role || null,\r\n        isRenter: user?.role === 'renter',\r\n        isOwner: user?.role === 'owner',\r\n        isAdmin: user?.role === 'admin'\r\n      }}\r\n    >\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}