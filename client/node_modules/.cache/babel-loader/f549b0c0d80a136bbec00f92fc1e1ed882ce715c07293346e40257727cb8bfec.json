{"ast":null,"code":"var _jsxFileName = \"D:\\\\HouseRent\\\\client\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [user, setUser] = useState(null);\n\n  // Set up axios interceptors for token handling\n  useEffect(() => {\n    // Add a request interceptor to include the token in all outgoing requests\n    const requestInterceptor = axios.interceptors.request.use(config => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        config.headers['Authorization'] = `Bearer ${token}`;\n      }\n      return config;\n    }, error => {\n      return Promise.reject(error);\n    });\n\n    // Add a response interceptor to handle token-related errors\n    const responseInterceptor = axios.interceptors.response.use(response => response, error => {\n      // If we get a 401 Unauthorized error, log the user out\n      if (error.response && error.response.status === 401) {\n        console.log('Authentication error detected, logging out...');\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        setIsAuthenticated(false);\n        setUser(null);\n      }\n      return Promise.reject(error);\n    });\n\n    // Clean up interceptors when component unmounts\n    return () => {\n      axios.interceptors.request.eject(requestInterceptor);\n      axios.interceptors.response.eject(responseInterceptor);\n    };\n  }, []);\n  useEffect(() => {\n    // Check if user is logged in on mount\n    const token = localStorage.getItem('token');\n    const userData = localStorage.getItem('user');\n    console.log('Auth context initializing. Token exists:', !!token);\n    if (token) {\n      setIsAuthenticated(true);\n\n      // Set user data if available\n      if (userData) {\n        try {\n          const parsedUser = JSON.parse(userData);\n          console.log('User data from localStorage:', parsedUser);\n          setUser(parsedUser);\n        } catch (error) {\n          console.error('Error parsing user data', error);\n        }\n      } else {\n        console.log('No user data in localStorage, but token exists');\n      }\n    } else {\n      console.log('No authentication token found');\n    }\n    setLoading(false);\n  }, []);\n  const login = (token, userData) => {\n    localStorage.setItem('token', token);\n\n    // Save user data\n    if (userData) {\n      localStorage.setItem('user', JSON.stringify(userData));\n      setUser(userData);\n    }\n\n    // Set authentication state\n    setIsAuthenticated(true);\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setIsAuthenticated(false);\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      loading,\n      user,\n      login,\n      logout,\n      role: (user === null || user === void 0 ? void 0 : user.role) || null,\n      isRenter: (user === null || user === void 0 ? void 0 : user.role) === 'renter',\n      isOwner: (user === null || user === void 0 ? void 0 : user.role) === 'owner',\n      isAdmin: (user === null || user === void 0 ? void 0 : user.role) === 'admin'\n    },\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"Tz+VBF8392rb/ViTHClS2jGUQdY=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","loading","setLoading","user","setUser","requestInterceptor","interceptors","request","use","config","token","localStorage","getItem","headers","error","Promise","reject","responseInterceptor","response","status","console","log","removeItem","eject","userData","parsedUser","JSON","parse","login","setItem","stringify","logout","Provider","value","role","isRenter","isOwner","isAdmin","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["D:/HouseRent/client/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [user, setUser] = useState(null);\r\n\r\n  // Set up axios interceptors for token handling\r\n  useEffect(() => {\r\n    // Add a request interceptor to include the token in all outgoing requests\r\n    const requestInterceptor = axios.interceptors.request.use(\r\n      config => {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n          config.headers['Authorization'] = `Bearer ${token}`;\r\n        }\r\n        return config;\r\n      },\r\n      error => {\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n    \r\n    // Add a response interceptor to handle token-related errors\r\n    const responseInterceptor = axios.interceptors.response.use(\r\n      response => response,\r\n      error => {\r\n        // If we get a 401 Unauthorized error, log the user out\r\n        if (error.response && error.response.status === 401) {\r\n          console.log('Authentication error detected, logging out...');\r\n          localStorage.removeItem('token');\r\n          localStorage.removeItem('user');\r\n          setIsAuthenticated(false);\r\n          setUser(null);\r\n        }\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n    \r\n    // Clean up interceptors when component unmounts\r\n    return () => {\r\n      axios.interceptors.request.eject(requestInterceptor);\r\n      axios.interceptors.response.eject(responseInterceptor);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Check if user is logged in on mount\r\n    const token = localStorage.getItem('token');\r\n    const userData = localStorage.getItem('user');\r\n    \r\n    console.log('Auth context initializing. Token exists:', !!token);\r\n    \r\n    if (token) {\r\n      setIsAuthenticated(true);\r\n      \r\n      // Set user data if available\r\n      if (userData) {\r\n        try {\r\n          const parsedUser = JSON.parse(userData);\r\n          console.log('User data from localStorage:', parsedUser);\r\n          setUser(parsedUser);\r\n        } catch (error) {\r\n          console.error('Error parsing user data', error);\r\n        }\r\n      } else {\r\n        console.log('No user data in localStorage, but token exists');\r\n      }\r\n    } else {\r\n      console.log('No authentication token found');\r\n    }\r\n    \r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = (token, userData) => {\r\n    localStorage.setItem('token', token);\r\n    \r\n    // Save user data\r\n    if (userData) {\r\n      localStorage.setItem('user', JSON.stringify(userData));\r\n      setUser(userData);\r\n    }\r\n    \r\n    // Set authentication state\r\n    setIsAuthenticated(true);\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    setIsAuthenticated(false);\r\n    setUser(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        isAuthenticated,\r\n        loading,\r\n        user,\r\n        login,\r\n        logout,\r\n        role: user?.role || null,\r\n        isRenter: user?.role === 'renter',\r\n        isOwner: user?.role === 'owner',\r\n        isAdmin: user?.role === 'admin'\r\n      }}\r\n    >\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}